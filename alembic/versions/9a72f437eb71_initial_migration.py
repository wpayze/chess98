"""Initial migration

Revision ID: 9a72f437eb71
Revises: 
Create Date: 2025-03-30 13:52:02.639237

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a72f437eb71'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('icon', sa.String(), nullable=False),
    sa.Column('criteria_type', sa.String(), nullable=False),
    sa.Column('criteria_value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('active', 'suspended', 'banned', name='userstatus'), nullable=False),
    sa.Column('role', sa.Enum('user', 'moderator', 'admin', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('friends',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('friend_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'rejected', 'blocked', name='friendstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'friend_id', name='_user_friend_uc')
    )
    op.create_table('games',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('white_id', sa.UUID(), nullable=False),
    sa.Column('black_id', sa.UUID(), nullable=False),
    sa.Column('time_control', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'active', 'completed', 'aborted', name='gamestatus'), nullable=False),
    sa.Column('result', sa.Enum('white_win', 'black_win', 'draw', name='gameresult'), nullable=True),
    sa.Column('termination', sa.Enum('checkmate', 'resignation', 'timeout', 'draw_agreement', 'stalemate', 'insufficient_material', 'fifty_move_rule', 'threefold_repetition', name='gametermination'), nullable=True),
    sa.Column('initial_fen', sa.String(), nullable=False),
    sa.Column('final_fen', sa.String(), nullable=True),
    sa.Column('pgn', sa.String(), nullable=True),
    sa.Column('opening', sa.String(), nullable=True),
    sa.Column('eco_code', sa.String(), nullable=True),
    sa.Column('white_rating', sa.Integer(), nullable=False),
    sa.Column('black_rating', sa.Integer(), nullable=False),
    sa.Column('white_rating_change', sa.Integer(), nullable=True),
    sa.Column('black_rating_change', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['black_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['white_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('ratings', sa.JSON(), nullable=False),
    sa.Column('total_games', sa.Integer(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=False),
    sa.Column('losses', sa.Integer(), nullable=False),
    sa.Column('draws', sa.Integer(), nullable=False),
    sa.Column('title', sa.Enum('GM', 'IM', 'FM', 'CM', 'NM', name='title_enum'), nullable=True),
    sa.Column('member_since', sa.DateTime(), nullable=False),
    sa.Column('last_active', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('theme', sa.String(), nullable=False),
    sa.Column('board_theme', sa.String(), nullable=False),
    sa.Column('piece_set', sa.String(), nullable=False),
    sa.Column('animation_speed', sa.Integer(), nullable=False),
    sa.Column('move_confirmation', sa.Boolean(), nullable=False),
    sa.Column('sound_enabled', sa.Boolean(), nullable=False),
    sa.Column('auto_promote_to_queen', sa.Boolean(), nullable=False),
    sa.Column('show_legal_moves', sa.Boolean(), nullable=False),
    sa.Column('game_notifications', sa.Boolean(), nullable=False),
    sa.Column('challenge_notifications', sa.Boolean(), nullable=False),
    sa.Column('friend_notifications', sa.Boolean(), nullable=False),
    sa.Column('message_notifications', sa.Boolean(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('profile_visibility', sa.Boolean(), nullable=False),
    sa.Column('game_history_visibility', sa.Boolean(), nullable=False),
    sa.Column('online_status_visibility', sa.Boolean(), nullable=False),
    sa.Column('allow_friend_requests', sa.Boolean(), nullable=False),
    sa.Column('allow_data_collection', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.UUID(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'achievement_id', name='_user_achievement_uc')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('is_system_message', sa.Boolean(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('moves',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('move_number', sa.Integer(), nullable=False),
    sa.Column('color', sa.Enum('white', 'black', name='movecolor'), nullable=False),
    sa.Column('move_san', sa.String(), nullable=False),
    sa.Column('move_uci', sa.String(), nullable=False),
    sa.Column('fen_after', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('time_spent', sa.Integer(), nullable=False),
    sa.Column('is_check', sa.Boolean(), nullable=False),
    sa.Column('is_checkmate', sa.Boolean(), nullable=False),
    sa.Column('is_capture', sa.Boolean(), nullable=False),
    sa.Column('is_castle', sa.Boolean(), nullable=False),
    sa.Column('is_promotion', sa.Boolean(), nullable=False),
    sa.Column('promotion_piece', sa.String(), nullable=True),
    sa.Column('evaluation', sa.Float(), nullable=True),
    sa.Column('best_move', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('moves')
    op.drop_table('chat_messages')
    op.drop_table('user_achievements')
    op.drop_table('settings')
    op.drop_table('profiles')
    op.drop_table('games')
    op.drop_table('friends')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('achievements')
    # ### end Alembic commands ###
